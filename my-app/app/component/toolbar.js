import Link from "next/link";
import styles from "../page.module.css";

export default function Toolbar({
  showQuestionOptions,
  setShowQuestionOptions,
  setInput,
  apiMode,
  setApiMode,
  setMessages,
}) {
  const handleSelectChange = (e) => {
    setInput(e.target.value);
    setShowQuestionOptions(false);
  };

  const toggleApiMode = (mode) => {
    setApiMode(apiMode === mode ? "chat" : mode);
  };

  return (
    <div className={styles.toolBar}>
      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}
      <Link href="/csv">
        <button className={styles.pillButton} aria-label="Update database">
          <span className={styles.icon}>üì§</span> ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        </button>
      </Link>

      {/* ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° */}
      <button
        className={styles.pillButton}
        onClick={() => setShowQuestionOptions(!showQuestionOptions)}
      >
        ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
      </button>

      {/* Dropdown ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á */}
      {showQuestionOptions && (
        <select
          className={styles.dropdown}
          onChange={handleSelectChange}
          defaultValue=""
        >
          <option value="" disabled>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°</option>
          <option value="‡πÉ‡∏Ñ‡∏£‡∏°‡∏≤‡∏™‡∏≤‡∏¢‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ">‡πÉ‡∏Ñ‡∏£‡∏°‡∏≤‡∏™‡∏≤‡∏¢‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ</option>
          <option value="‡∏Ç‡∏≠‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô ‡πÅ‡∏ú‡∏ô‡∏Å XXXX ‡∏õ‡∏µ XXXX">
            ‡∏Ç‡∏≠‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô ‡πÅ‡∏ú‡∏ô‡∏Å XXXX ‡∏õ‡∏µ XXXX
          </option>
          <option value="‡∏Ç‡∏≠‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô ‡πÅ‡∏ú‡∏ô‡∏Å XXXX ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô XXXX ‡∏õ‡∏µ XXXX">
            ‡∏Ç‡∏≠‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô ‡πÅ‡∏ú‡∏ô‡∏Å XXXX ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô XXXX ‡∏õ‡∏µ XXXX
          </option>
          <option value="‡∏Ç‡∏≠‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô ‡πÅ‡∏ú‡∏ô‡∏Å back office ‡∏õ‡∏µ 2023">
            ‡∏Ç‡∏≠‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô ‡πÅ‡∏ú‡∏ô‡∏Å back office ‡∏õ‡∏µ 2023
          </option>
        </select>
      )}

      {/* Checkbox ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏°‡∏î API */}
      <label className={styles.checkboxLabel}>
        <input
          type="checkbox"
          checked={apiMode === "report"}
          onChange={() => toggleApiMode("report")}
        />
        ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô
      </label>

      <label className={styles.checkboxLabel}>
        <input
          type="checkbox"
          checked={apiMode === "sickReport"}
          onChange={() => toggleApiMode("sickReport")}
        />
        ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡∏á‡∏≤‡∏ô
      </label>

      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° */}
      <button className={styles.resetButton} onClick={() => setMessages([])}>
        üóëÔ∏è ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      </button>
    </div>
  );
}